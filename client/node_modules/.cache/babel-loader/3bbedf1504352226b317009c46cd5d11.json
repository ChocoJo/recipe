{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Javascript fullstack Molndal/React/recipe/src/routes/Routes.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { HomeView } from '../views/HomeView';\nimport { DrinkView } from \"../views/navigationtabviews/drink/DrinkView\";\nimport { FoodView } from \"../views/navigationtabviews/food/FoodView\";\nimport { RecipeView } from \"../views/navigationtabviews/recipe/RecipeView\";\nimport RoutingPath from './RoutingPath';\nimport { SigninView } from '../views/SigninView';\nimport { UserContext } from \"../utils/provider/UserProvider\";\nimport { useEffect, useContext } from \"react\";\nimport { SettingsView } from \"../views/authenticatedview/SettingsView\";\nexport const Routes = ({\n  children\n}) => {\n  _s();\n\n  const [, setAuthUser] = useContext(UserContext);\n\n  const blockRouteIfAuthenticated = () => {\n    if (!authUser) {\n      return SigninView;\n    } else {\n      return HomeView;\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('user')) {\n      setAuthUser({\n        username: localStorage.getItem('user')\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [children, /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: RoutingPath.HomeView,\n        component: HomeView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: RoutingPath.RecipeView,\n        component: RecipeView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: RoutingPath.FoodView,\n        component: FoodView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: RoutingPath.DrinkView,\n        component: DrinkView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: blockRouteIfAuthenticated,\n        component: SigninView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: RoutingPath.SettingsView,\n        component: SettingsView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Routes, \"B3lB1CQSaO7oT8AihSGR86+EnX4=\");\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/Users/admin/Javascript fullstack Molndal/React/recipe/src/routes/Routes.js"],"names":["BrowserRouter","Switch","Route","HomeView","DrinkView","FoodView","RecipeView","RoutingPath","SigninView","UserContext","useEffect","useContext","SettingsView","Routes","children","setAuthUser","blockRouteIfAuthenticated","authUser","localStorage","getItem","username"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,6CAA1B;AACA,SAASC,QAAT,QAAyB,2CAAzB;AACA,SAASC,UAAT,QAA2B,+CAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,YAAT,QAA6B,yCAA7B;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,GAAGC,WAAH,IAAkBJ,UAAU,CAACF,WAAD,CAAlC;;AAEA,QAAMO,yBAAyB,GAAG,MAAM;AACpC,QAAG,CAACC,QAAJ,EAAc;AACV,aAAOT,UAAP;AACH,KAFD,MAEO;AACH,aAAOL,QAAP;AACH;AACJ,GAND;;AAQAO,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAH,EAAiC;AAC7BJ,MAAAA,WAAW,CAAC;AAACK,QAAAA,QAAQ,EAAEF,YAAY,CAACC,OAAb,CAAqB,MAArB;AAAX,OAAD,CAAX;AACH;AAEJ,GALQ,EAKP,EALO,CAAT;AAOA,sBACI,QAAC,aAAD;AAAA,eACKL,QADL,eAEI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEP,WAAW,CAACJ,QAA/B;AAAyC,QAAA,SAAS,EAAEA;AAApD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEI,WAAW,CAACD,UAA/B;AAA2C,QAAA,SAAS,EAAEA;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEC,WAAW,CAACF,QAA/B;AAAyC,QAAA,SAAS,EAAEA;AAApD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEE,WAAW,CAACH,SAA/B;AAA0C,QAAA,SAAS,EAAEA;AAArD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEY,yBAAnB;AAA8C,QAAA,SAAS,EAAGR;AAA1D;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAED,WAAW,CAACK,YAA/B;AAA6C,QAAA,SAAS,EAAGA;AAAzD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA/BM;;GAAMC,M;;KAAAA,M","sourcesContent":["import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { HomeView } from '../views/HomeView';\nimport { DrinkView } from \"../views/navigationtabviews/drink/DrinkView\";\nimport { FoodView } from \"../views/navigationtabviews/food/FoodView\";\nimport { RecipeView } from \"../views/navigationtabviews/recipe/RecipeView\";\nimport RoutingPath from './RoutingPath';\nimport { SigninView } from '../views/SigninView';\nimport { UserContext } from \"../utils/provider/UserProvider\";\nimport { useEffect, useContext } from \"react\";\nimport { SettingsView } from \"../views/authenticatedview/SettingsView\";\n\nexport const Routes = ({ children }) => {\n    const [, setAuthUser] = useContext(UserContext);\n\n    const blockRouteIfAuthenticated = () => {\n        if(!authUser) {\n            return SigninView;\n        } else {\n            return HomeView;\n        }\n    }\n\n    useEffect(() => {\n        if(localStorage.getItem('user')) {\n            setAuthUser({username: localStorage.getItem('user')});\n        }\n\n    },[]);\n   \n    return (\n        <BrowserRouter>\n            {children}\n            <Switch>\n                <Route exact path={RoutingPath.HomeView} component={HomeView} />\n                <Route exact path={RoutingPath.RecipeView} component={RecipeView} />\n                <Route exact path={RoutingPath.FoodView} component={FoodView} />\n                <Route exact path={RoutingPath.DrinkView} component={DrinkView} />\n                <Route exact path={blockRouteIfAuthenticated} component= {SigninView} />\n                <Route exact path={RoutingPath.SettingsView} component= {SettingsView}/>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}