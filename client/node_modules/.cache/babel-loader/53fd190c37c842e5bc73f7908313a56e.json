{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const {\n    innerWidth: width,\n    innerHeigth: heigth\n  } = window;\n  return {\n    width,\n    heigth\n  };\n  console.log(heigth);\n};\n\nexport const useWindowDimensions = () => {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  const handleResize = () => {\n    getWindowDimensions();\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n};\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");","map":{"version":3,"sources":["/Users/admin/Javascript fullstack Molndal/React/recipe/src/hooks/useWindowDimensions.js"],"names":["useState","useEffect","getWindowDimensions","innerWidth","width","innerHeigth","heigth","window","console","log","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA,UAAU,EAAEC,KAAd;AAAqBC,IAAAA,WAAW,EAAEC;AAAlC,MAA6CC,MAAnD;AACA,SAAO;AAAEH,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAP;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,CAJD;;AAMA,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAACE,mBAAmB,EAApB,CAAxD;;AACA,QAAMW,YAAY,GAAG,MAAM;AAAEX,IAAAA,mBAAmB;AAC/C,GADD;;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AAEC,GAJI,EAIF,EAJE,CAAT;AAKI,SAAOF,gBAAP;AACH,CAXE;;GAAMD,mB","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeigth: heigth } = window;\n    return { width, heigth }\n    console.log(heigth);\n}\n\nexport const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const handleResize = () => { getWindowDimensions();\n    }\n    \n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n        \n        }, []);\n        return windowDimensions;\n    }\n"]},"metadata":{},"sourceType":"module"}